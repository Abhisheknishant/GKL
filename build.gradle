plugins {
    id "java"
    id "maven"
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.testng:testng:6.9.9'
    compile 'commons-io:commons-io:2.4'
    compile 'org.broadinstitute:gatk-native-bindings:0.0.2'
    compile 'org.apache.logging.log4j:log4j-core:2.5'
}


test {
    useTestNG()

    testLogging {
        if (!System.env.CI.toString().toBoolean()) {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
    }

    // always rerun tests
    outputs.upToDateWhen { false } 
}

import org.gradle.internal.os.OperatingSystem

task buildNativeLib(type: Exec) {
    // hide stdout, but print stderr
    standardOutput = new ByteArrayOutputStream()
    workingDir 'src/main/native/compression'
    commandLine './build'
    if (OperatingSystem.current().isLinux()) {
        outputs.files('src/main/native/compression/libIntelGKL.so')
    } else if (OperatingSystem.current().isMacOsX()) {
        outputs.files('src/main/native/compression/libIntelGKL.dylib')
    }

    // always run this task
    outputs.upToDateWhen {false}
}

compileJava.dependsOn(buildNativeLib)

task copyNativeLib(type: Copy) {
    from buildNativeLib.outputs.files
    if (OperatingSystem.current().isLinux()) {
        into "$compileJava.destinationDir/com/intel/gkl/native/linux/64"
    } else if (OperatingSystem.current().isMacOsX()) {
        into "$compileJava.destinationDir/com/intel/gkl/native/mac/64"
    }
}

buildNativeLib.finalizedBy copyNativeLib

task cleanNativeLib(type: Exec) {
    // hide stdout, but print stderr
    standardOutput = new ByteArrayOutputStream()
    workingDir 'src/main/native/compression/igzip_042/igzip'
    commandLine 'make', 'clean'
}

clean.dependsOn(cleanNativeLib)

group = "com.intel"
version = "1.0.0"
jar.baseName = "intel-gkl"
